@{
    ViewData["Title"] = "Chi tiết sản phẩm";
}
<link href="~/css/TrangChiTietSP.css" rel="stylesheet" />

<div class="container mt-5">
    <!-- Product Details Section -->
    <div class="row">
        <!-- Product Images -->
        <div class="col-md-6">
            <div class="text-center mb-3">
                <img style="border: 1px solid black; border-radius: 5px;" id="mainImage" src="~/images/T1.svg" class="img-fluid rounded" alt="Main Shoe Image">
            </div>
        </div>

        <!-- Product Info -->
        <div class="col-md-6 product-info">
            <h3 class="fw-bold">Đang tải...</h3> <!-- Để mặc định là "Đang tải..." -->
            <div class="d-flex align-items-center">
                <span class="text-warning me-2" id="imgAvg">★★★★☆</span>
                <span id="ratingAvg">(4.5)</span>
                <span class="ms-4"><strong>Lượt thích:</strong> <i id="likes">Đang tải...</i></span>
                <span class="ms-4"><strong>Lượt xem:</strong> <i id="views">Đang tải...</i></span>
            </div>
            <p class="mt-2"><strong>Tổng kho:</strong> <span id="totalStock">Đang tải...</span> (<span id="stockStatus"></span>)</p>

            <h4 class="text-danger fw-bold mt-3">Đang tải...</h4> <!-- Hiển thị giá sản phẩm sau khi API trả về -->
            <!-- Color and Size -->
            <div>
                <label for="colorSelect" class="form-label">Màu sắc</label>
                <select class="form-select" id="colorSelect">
                    <!-- Các option sẽ được nạp từ API -->
                </select>
            </div>
            <div>
                <label for="sizeSelect" class="form-label">Kích thước</label>
                <select class="form-select" id="sizeSelect">
                    <!-- Các option sẽ được nạp từ API -->
                </select>
            </div>

            <!-- Quantity -->
            <div>
                <label for="quantityInput" class="form-label">Số lượng</label>
                <input type="number" id="quantityInput" class="form-control w-25" value="1" min="1" >
                <p class="mb-0"><strong>Còn lại:</strong> <span id="stockCount">Đang tải...</span> sản phẩm</p>
            </div>

            <!-- Buttons -->
            <div class="d-flex align-items-center mt-4">
                <button class="btn btn-primary me-2" id="addtocart">Thêm vào giỏ hàng</button>
                <button class="btn btn-outline-danger btn-wishlist" id="wishlistBtnContainer">
                    <i class="bi bi-heart"></i> Thêm vào danh sách yêu thích
                </button>
            </div>
        </div>
    </div>

    <!-- Description Section -->
    <div class="row mt-5">
        <h4>Mô tả</h4>
        <div class="col-md-12">
            <p id="productDescription">Đang tải...</p> <!-- Hiển thị mô tả sản phẩm sau khi API trả về -->
        </div>
    </div>

    <!-- Reviews Section -->
    <div class="row mt-5">
        <h4>Đánh giá của khách hàng</h4>
        <div class="col-md-12">
            <p><strong>Đánh giá trung bình:</strong> <span id="averageRating">5.0/5.0</span></p>
            <p><strong>Tổng số đánh giá:</strong> <span id="totalReviews">0 đánh giá</span></p>
            <div id="reviewsList"></div>
        </div>
    </div>

    <!-- Sản phẩm liên quan -->
    <section class="pt-4 pb-4">
        <div class="container">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h3 class="fw-bold mb-0">Sản phẩm liên quan</h3>
            </div>
            <div id="relatedProducts" class="row row-cols-1 row-cols-md-2 row-cols-lg-4 g-4">
                <!-- Sản phẩm liên quan sẽ được nạp ở đây -->
            </div>
        </div>
    </section>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        const productId = '@ViewData["ProductId"]';

        // Gọi API để lấy dữ liệu sản phẩm
        function fetchProductData() {
            $.ajax({
                url: `/api/user/ProductDetailsAPI/GetProductDetails/${productId}`,
                type: 'GET',
                dataType: 'json',
                success: function (data) {
                    if (data.success) {
                        const product = data.product;
                        const likes = data.likes
                        displayProductInfo(product,likes);
                        populateSelectors(product);
                        updateStock();
                    } else {
                        showErrorMessage('Sản phẩm không tồn tại hoặc đã bị ẩn.');
                    }
                },
                error: function () {
                    showErrorMessage('Lỗi khi tải dữ liệu sản phẩm.');
                }
            });
        }

        // Gọi API để lấy dữ liệu đánh giá sản phẩm
        function fetchProductReviews() {
            $.ajax({
                url: `/api/user/ProductDetailsAPI/GetProductReviews/${productId}`,
                type: 'GET',
                dataType: 'json',
                success: function (data) {
                    if (data.success) {
                        updateReviews(data);
                    } else {
                        $('#reviewsList').html('<p>Không có đánh giá nào.</p>');
                    }
                },
                error: function () {
                    showErrorMessage('Lỗi khi tải dữ liệu đánh giá.');
                }
            });
        }

        // Hiển thị thông báo lỗi
        function showErrorMessage(message) {
            $('.product-info').html(`<div class="alert alert-danger">${message}</div>`);
        }

        // Cập nhật thông tin sản phẩm
        function displayProductInfo(product,likes) {
            const totalStock = product.productDetails.reduce((sum, pd) => sum + pd.stockQuantity, 0);
            $('#mainImage').attr('src', '/images/' + product.image)
            $('.product-info h3').text(product.name);
            $('.product-info .text-danger').text(new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(product.price));
            $('#totalStock').text(`${totalStock} sản phẩm`);
            $('#stockStatus').text(totalStock > 0 ? 'Còn hàng' : 'Hết hàng').toggleClass('in-stock', totalStock > 0).toggleClass('out-of-stock', totalStock === 0);
            $('#productDescription').text(product.description);
            $('#likes').text(likes);
        }

        // Cập nhật dữ liệu liên quan đến màu sắc và kích thước
        function populateSelectors(product) {
            console.log('sản phảma',product)
            const colorSelect = $('#colorSelect');
            const sizeSelect = $('#sizeSelect');
            const colors = Array.from(new Set(product.productDetails.map(pd => `${pd.colorId}:${pd.colorName}`)));
            const sizes = Array.from(new Set(product.productDetails.map(pd => `${pd.sizeId}:${pd.sizeName}`)));

            colorSelect.empty().append(colors.map(colorString => {
                const [colorId, colorName] = colorString.split(":");
                return new Option(colorName, colorId);
            }));

            sizeSelect.empty().append(sizes.map(sizeString => {
                const [sizeId, size] = sizeString.split(":");
                return new Option(size, sizeId);
            }));

            // Lưu dữ liệu số lượng tồn kho
            window.stockData = product.productDetails.reduce((acc, pd) => {
                acc[pd.colorId] = acc[pd.colorId] || {};
                acc[pd.colorId][pd.sizeId] = {
                    stockQuantity: pd.stockQuantity,
                    productDetailId: pd.productDetailId,
                };
                return acc;
            }, {});

        }

        // Cập nhật số lượng tồn kho
        function updateStock() {
            const color = $('#colorSelect').val();
            const size = $('#sizeSelect').val();

            // Kiểm tra dữ liệu tồn tại
            if (window.stockData[color] && window.stockData[color][size]) {
                const stockData = window.stockData[color][size];
                $('#stockCount').text(stockData.stockQuantity); // Cập nhật số lượng tồn kho
                $('#quantityInput').attr('max', stockData.stockQuantity); // Giới hạn số lượng nhập
                console.log('Mã chi tiết sản phẩm:', stockData.productDetailId); // Log mã chi tiết sản phẩm
                productDetailId = stockData.productDetailId
            } else {
                $('#stockCount').text(0); // Hiển thị 0 nếu không có dữ liệu
                $('#quantityInput').attr('max', 0); // Đặt max là 0
                console.log('Không tìm thấy thông tin cho tổ hợp màu sắc và kích thước đã chọn.');
            }
        }




        $('#quantityInput').on('input', function () {
            const stock = parseInt($('#stockCount').text());
            let quantity = parseInt($(this).val());

            // Nếu số lượng vượt quá số lượng tồn kho, đặt lại về tối đa
            if (quantity > stock) {
                $(this).val(stock);
                alert('Số lượng sản phẩm bạn chọn vượt quá số lượng có sẵn. Vui lòng chọn lại.');
            }
        });

        // Hiển thị đánh giá sản phẩm
        function updateReviews(data) {
            $('#averageRating').text(`${data.averageRating}/5.0`);
            $('#ratingAvg').text(`(${data.averageRating})`);
            $('#totalReviews').text(`${data.totalReviews} đánh giá`);

            let reviewsHtml = data.reviews.map(function (review) {
                return `
                <div class="review">
                    <p><strong>${review.name}</strong> - <span class="text-warning">${getStarRating(review.rating)}</span> ${review.rating}/5.0</p>
                    <p>${review.comment}</p>
                </div><hr>
            `;
            }).join('');

            $('#reviewsList').html(reviewsHtml);
        }

        // Tạo sao đánh giá
        function getStarRating(rating) {
            let fullStars = Math.floor(rating);
            let halfStars = (rating % 1) >= 0.5 ? 1 : 0;
            let emptyStars = 5 - fullStars - halfStars;
            return '★'.repeat(fullStars) + (halfStars ? '☆' : '') + '☆'.repeat(emptyStars);
        }

        // Kiểm tra trạng thái đăng nhập
        function checkLoginStatus() {
            $.ajax({
                url: `/api/user/ProductDetailsAPI/CheckLoginStatus`,
                type: 'GET',
                success: function (response) {
                    if (response.isLoggedIn) {
                        $('#wishlistBtnContainer').show();
                        checkWishlistStatus(productId);
                    } else {
                        $('#wishlistBtnContainer').hide();
                    }
                },
                error: function () {
                    $('#wishlistBtnContainer').hide();
                }
            });
        }

        // Kiểm tra trạng thái yêu thích
        function checkWishlistStatus(productId) {
            $.ajax({
                url: `/api/user/ProductDetailsAPI/CheckWishlistStatus/${productId}`,
                type: 'GET',
                success: function (response) {
                    const text = response.isFavorite
                        ? '<i class="bi bi-heart-fill"></i> Xóa khỏi danh sách yêu thích'
                        : '<i class="bi bi-heart"></i> Thêm vào danh sách yêu thích';
                    $('#wishlistBtnContainer').html(text);
                    $('#likes').text(response.favoriteCount)


                },
                error: function () {
                    console.error("Không thể kiểm tra trạng thái yêu thích.");
                }
            });
        }

        // Thêm/xóa sản phẩm khỏi danh sách yêu thích
        function toggleWishlist() {
            $.ajax({
                url: '/api/user/ProductDetailsAPI/ToggleWishlist',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(productId),
                success: function (response) {
                    alert(response.message);
                    const text = response.isFavorite
                        ? '<i class="bi bi-heart-fill"></i> Xóa khỏi danh sách yêu thích'
                        : '<i class="bi bi-heart"></i> Thêm vào danh sách yêu thích';
                    $('#wishlistBtnContainer').html(text);
                    $('#likes').text(response.newFavoriteCount)
                    console.log('Lượt yêu thích', response.newFavoriteCount)
                },
                error: function (xhr) {
                    if (xhr.status === 401) {
                        alert('Bạn cần đăng nhập để thực hiện thao tác này.');
                    } else {
                        console.error("Lỗi khi thêm/xóa sản phẩm khỏi danh sách yêu thích:", xhr.responseText);
                    }
                }
            });
        }

        function fetchRelatedProducts(productId) {
            $.ajax({
                url: `/api/user/ProductDetailsAPI/GetRelatedProducts/${productId}`,
                type: 'GET',
                dataType: 'json',
                success: function (data) {
                    if (data.success) {
                        const relatedProducts = data.relatedProducts;
                        if (relatedProducts.length > 0) {
                            displayRelatedProducts(relatedProducts);
                        } else {
                            $('#relatedProducts').html('<p>Không có sản phẩm liên quan.</p>');
                        }
                    } else {
                        $('#relatedProducts').html('<p>Không thể tải sản phẩm liên quan.</p>');
                    }
                },
                error: function () {
                    $('#relatedProducts').html('<p>Lỗi khi tải sản phẩm liên quan.</p>');
                }
            });
        }

        function displayRelatedProducts(products) {
            const container = $('#relatedProducts');
            container.empty();

            products.forEach(product => {
                const productHtml = `
            <div class="col">
                <div class="card h-100">
                <a href="/Home/TrangChiTietSP/${product.productId}" >
                          <img src="/images/${product.image}" class="card-img-top" alt="${product.name}">
                </a>

                    <div class="card-body">
                    <a href="/Home/TrangChiTietSP/${product.productId}" >
                     <h5 class="card-title">${product.name}</h5></a>

                        <p class="card-text text-danger fw-bold">
                            ${new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(product.price)}
                        </p>

                    </div>
                </div>
            </div>
        `;
                container.append(productHtml);
            });
        }

        function increaseProductView(productId) {
            $.ajax({
                url: `/api/user/ProductDetailsAPI/IncreaseProductView/${productId}`,
                type: 'POST',
                success: function (response) {
                    console.log(response.message); // In thông báo thành công
                    $('#views').text(response.views);


                },
                error: function (xhr) {
                    console.error("Lỗi khi cập nhật lượt xem:", xhr.responseText);
                }
            });
        }

        function addProductToCart() {
            const color = $('#colorSelect').val();
            const size = $('#sizeSelect').val();
            const quantity = parseInt($('#quantityInput').val(), 10); // Chuyển đổi số lượng thành số nguyên
            let productDetailId = 0;

            // Kiểm tra nếu màu sắc và kích thước hợp lệ
            if (!color || !size) {
                alert("Vui lòng chọn màu sắc và kích thước.");
                return;
            }

            // Kiểm tra sự tồn tại của dữ liệu cho màu sắc và kích thước
            if (window.stockData[color] && window.stockData[color][size]) {
                const stockData = window.stockData[color][size];
                productDetailId = stockData.productDetailId;
            } else {
                alert("Thông tin về sản phẩm này không hợp lệ.");
                return;
            }

            // Kiểm tra số lượng nhập vào
            if (isNaN(quantity) || quantity <= 0) {
                alert("Vui lòng nhập số lượng hợp lệ.");
                return;
            }

            // Thông tin gửi lên server
            let info = {
                productId: productId,
                productDetailId: productDetailId,
                quantity: quantity
            };

            console.log('info', info); // Debug thông tin trước khi gửi

            // Gửi AJAX request đến API
            $.ajax({
                url: `/api/user/ProductDetailsAPI/addProductToCart/`,
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(info),
                success: function (response) {
                    if (response.success) {
                        alert("Sản phẩm đã được thêm vào giỏ hàng!");
                        // Có thể thêm một số logic khác sau khi thành công như cập nhật giỏ hàng hiển thị trên giao diện
                    } else {
                        alert(response.message || "Không thể thêm sản phẩm vào giỏ hàng.");
                    }
                },
                error: function (xhr, status, error) {
                    console.error("Lỗi khi thêm sản phẩm vào giỏ hàng:", xhr.responseText);
                    alert("Có lỗi xảy ra khi thêm sản phẩm vào giỏ hàng.");
                }
            });
        }




        // Gọi các hàm khởi tạo
        fetchProductData();
        fetchProductReviews();
        checkLoginStatus();
        fetchRelatedProducts(productId);
        increaseProductView(productId);



        // Gắn sự kiện thay đổi cho các chọn lựa
        $('#colorSelect, #sizeSelect').on('change', updateStock);

        // Gắn sự kiện cho nút yêu thích
        $('#wishlistBtnContainer').on('click', toggleWishlist);
        $('#addtocart').on('click', addProductToCart);



    });


</script>

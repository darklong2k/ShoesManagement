<div class="container mt-5">
    <!-- Header Giỏ Hàng -->
    <div class="row mb-4">
        <div class="col text-center">
            <h1>Giỏ Hàng</h1>
        </div>
    </div>

    <!-- Kiểm tra giỏ hàng có sản phẩm hay không -->
    <div id="cart-container">
        <!-- Giỏ hàng trống -->
        <div id="empty-cart" class="alert alert-warning text-center d-none">
            <p>Giỏ hàng của bạn đang trống. Hãy thêm sản phẩm vào giỏ hàng.</p>
            <a href="san-pham" class="btn btn-primary">Quay lại mua tiếp</a>
        </div>

        <!-- Giỏ hàng có sản phẩm -->
        <div id="non-empty-cart" class="d-none">
            <div class="table-responsive">
                <table class="table table-bordered text-center">
                    <thead>
                        <tr>
                            <th>Hình ảnh</th>
                            <th>Tên sản phẩm</th>
                            <th>Màu sắc</th>
                            <th>Size</th>
                            <th>Giá</th>
                            <th>Số lượng</th>
                            <th>Thành tiền</th>
                            <th>Thao tác</th>
                        </tr>
                    </thead>
                    <tbody id="cart-items" class="align-middle">
                        <!-- Các sản phẩm trong giỏ hàng sẽ được hiển thị ở đây -->
                    </tbody>
                </table>
            </div>

            <!-- Phân trang -->
            <nav class="mt-4">
                <ul class="pagination justify-content-center" id="pagination"></ul>
            </nav>

            <!-- Tổng tiền và các nút hành động -->
            <div class="row mt-3">
                <div class="col-12 d-flex justify-content-end">
                    <div>
                        <strong>Tổng tiền:</strong> <span class="text-danger" id="total-cart-price">0đ</span>
                    </div>
                </div>

                <div class="col-12 d-flex justify-content-end mt-2">
                    <button class="btn btn-outline-danger me-2" onclick="clearCart()">Xóa hết giỏ hàng <i class="bi bi-arrow-clockwise"></i></button>
                    <a class="btn btn-outline-primary me-2" href="san-pham"><i class="bi bi-arrow-left"></i> Mua tiếp</a>
                    <button class="btn btn-success" onclick="placeOrder()">Đặt hàng <i class="bi bi-arrow-right"></i></button>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        let cartItems = [
            { id: 1, name: "NIKE REVOLUTION 7", size: "36", color: "Đen", price: 1800000, qty: 1, image: "https://kingshoes.vn/data/upload/media/fb2208-100-giay-nike-revolution-7-gia-tot-den-king-shoes-12.jpeg", url: "#" },
            { id: 2, name: "ADIDAS ULTRABOOST", size: "38", color: "Trắng", price: 2000000, qty: 2, image: "https://kingshoes.vn/data/upload/media/fb2208-100-giay-nike-revolution-7-gia-tot-den-king-shoes-12.jpeg", url: "#" },
            // Thêm sản phẩm khác
        ];

        let itemsPerPage = 5;
        let currentPage = 1;

        function displayCart() {
            const emptyCart = document.getElementById('empty-cart');
            const nonEmptyCart = document.getElementById('non-empty-cart');
            const cartContainer = document.getElementById('cart-items');
            const totalCartPrice = document.getElementById('total-cart-price');

            if (cartItems.length === 0) {
                emptyCart.classList.remove('d-none');
                nonEmptyCart.classList.add('d-none');
                return;
            }

            emptyCart.classList.add('d-none');
            nonEmptyCart.classList.remove('d-none');

            cartContainer.innerHTML = '';
            let start = (currentPage - 1) * itemsPerPage;
            let end = start + itemsPerPage;
            let paginatedItems = cartItems.slice(start, end);

            let totalPrice = 0;

            paginatedItems.forEach(item => {
                totalPrice += item.qty * item.price;
                let row = `
                <tr>
                    <td><a href="${item.url}"><img src="${item.image}" alt="${item.name}" class="img-fluid" style="width: 80px;"></a></td>
                    <td>${item.name}</td>
                    <td>${item.color}</td>
                    <td>${item.size}</td>
                    <td>${item.price.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' })}</td>
                    <td>
                        <div class="d-flex align-items-center justify-content-center">
                            <button class="btn btn-outline-secondary btn-sm" onclick="updateQuantity(-1, ${item.id})">-</button>
                            <input type="number" class="form-control mx-2 text-center" value="${item.qty}" style="width: 60px;" readonly>
                            <button class="btn btn-outline-secondary btn-sm" onclick="updateQuantity(1, ${item.id})">+</button>
                        </div>
                    </td>
                    <td>${(item.qty * item.price).toLocaleString('vi-VN', { style: 'currency', currency: 'VND' })}</td>
                    <td><button class="btn btn-danger btn-sm" onclick="removeItem(${item.id})"><i class="bi bi-x-circle"></i> Xoá</button></td>
                </tr>
            `;
                cartContainer.innerHTML += row;
            });

            totalCartPrice.textContent = totalPrice.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' });
            generatePagination();
        }

        function generatePagination() {
            const pagination = document.getElementById('pagination');
            pagination.innerHTML = '';

            let totalPages = Math.ceil(cartItems.length / itemsPerPage);

            for (let i = 1; i <= totalPages; i++) {
                let pageItem = document.createElement('li');
                pageItem.classList.add('page-item');
                if (i === currentPage) pageItem.classList.add('active');
                pageItem.innerHTML = `<a class="page-link" href="#" onclick="changePage(${i})">${i}</a>`;
                pagination.appendChild(pageItem);
            }
        }

        function changePage(page) {
            currentPage = page;
            displayCart();
        }

        function updateQuantity(change, itemId) {
            let item = cartItems.find(item => item.id === itemId);
            if (item) {
                item.qty = Math.max(1, item.qty + change);
                displayCart();
            }
        }

        function removeItem(itemId) {
            cartItems = cartItems.filter(item => item.id !== itemId);
            displayCart();
        }

        function clearCart() {
            cartItems = [];
            displayCart();
        }

        window.changePage = changePage;
        window.updateQuantity = updateQuantity;
        window.removeItem = removeItem;
        window.clearCart = clearCart;

        displayCart();
    });

</script>
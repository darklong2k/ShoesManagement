

<div class="container mt-5">
    <!-- Header Giỏ Hàng -->
    <div class="row mb-4">
        <div class="col text-center">
            <h1>Giỏ Hàng</h1>
        </div>
    </div>

    <!-- Kiểm tra giỏ hàng có sản phẩm hay không -->
    <div id="cart-container">
        <!-- Giỏ hàng trống -->
        <div id="empty-cart" class="alert alert-warning text-center" style="display: none;">
            <p>Giỏ hàng của bạn đang trống. Hãy thêm sản phẩm vào giỏ hàng.</p>
            <a href="san-pham" class="btn btn-primary">Quay lại mua tiếp</a>
        </div>

        <!-- Giỏ hàng có sản phẩm -->
        <div id="non-empty-cart" style="display: none;">
            <div class="table-responsive">
                <table class="table table-bordered text-center">
                    <thead>
                        <tr>
                            <th>Hình ảnh</th>
                            <th>Tên sản phẩm</th>
                            <th>Màu sắc</th>
                            <th>Size</th>
                            <th>Giá</th>
                            <th>Số lượng</th>
                            <th>Thành tiền</th>
                            <th>Thao tác</th>
                        </tr>
                    </thead>
                    <tbody id="cart-items" class="align-middle">
                        <!-- Các sản phẩm trong giỏ hàng sẽ được hiển thị ở đây -->
                    </tbody>
                </table>
            </div>

            <!-- Phân trang -->
            <nav aria-label="Page navigation example">
                <ul class="pagination justify-content-center" id="pagination">
                    <!-- Các nút phân trang sẽ được hiển thị ở đây -->
                </ul>
            </nav>

            <!-- Tổng tiền và các nút hành động -->
            <div class="row mt-3">
                <div class="col-12 d-flex justify-content-end">
                    <div>
                        <strong>Tổng tiền:</strong> <span class="text-danger" id="total-cart-price">0đ</span>
                    </div>
                </div>

                <!-- Nút hành động -->
                <div class="col-12 d-flex justify-content-end mt-2">
                    <a class="btn btn-outline-danger me-2" href="#" onclick="clearCart()">Xóa hết giỏ hàng <i class="bi bi-arrow-clockwise"></i></a>
                    <a class="btn btn-outline-primary me-2" href="san-pham"><i class="bi bi-arrow-left"></i> Mua tiếp</a>
                    <a class="btn btn-success" asp-area="" asp-controller="Home" asp-action="TrangThongTinGiaoHang">Đặt hàng <i class="bi bi-arrow-right"></i></a>
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <!-- Thêm Javascript để xử lý các chức năng (cập nhật số lượng, xóa sản phẩm, phân trang, v.v.) -->
    <script>
        // Dữ liệu giỏ hàng (ví dụ, sẽ lấy từ database hoặc localStorage trong thực tế)
        var cartItems = [
            { id: 86452289, name: "NIKE REVOLUTION 7", size: "36", color: "Đen", price: 1800000, qty: 1, image: "https://kingshoes.vn/data/upload/media/fb2208-100-giay-nike-revolution-7-gia-tot-den-king-shoes-12.jpeg", url: "https://kingshoes.vn/nike-revolution-7-fb2208-010-gia-tot-den-king-shoes.html" },
            { id: 86452289, name: "NIKE REVOLUTION 7", size: "36", color: "Đen", price: 1800000, qty: 1, image: "https://kingshoes.vn/data/upload/media/fb2208-100-giay-nike-revolution-7-gia-tot-den-king-shoes-12.jpeg", url: "https://kingshoes.vn/nike-revolution-7-fb2208-010-gia-tot-den-king-shoes.html" },
            { id: 86452289, name: "NIKE REVOLUTION 7", size: "36", color: "Đen", price: 1800000, qty: 1, image: "https://kingshoes.vn/data/upload/media/fb2208-100-giay-nike-revolution-7-gia-tot-den-king-shoes-12.jpeg", url: "https://kingshoes.vn/nike-revolution-7-fb2208-010-gia-tot-den-king-shoes.html" },

            // Thêm nhiều sản phẩm vào giỏ hàng để kiểm tra phân trang
            // ...
        ];

        var itemsPerPage = 5; // Số sản phẩm mỗi trang
        var currentPage = 1;

        // Hàm hiển thị giỏ hàng
        function displayCart() {
            if (cartItems.length === 0) {
                document.getElementById('empty-cart').style.display = 'block';
                document.getElementById('non-empty-cart').style.display = 'none';
            } else {
                document.getElementById('empty-cart').style.display = 'none';
                document.getElementById('non-empty-cart').style.display = 'block';

                let cartContainer = document.getElementById('cart-items');
                cartContainer.innerHTML = ''; // Xóa các sản phẩm hiện tại

                let totalCartPrice = 0;
                var start = (currentPage - 1) * itemsPerPage;
                var end = start + itemsPerPage;
                var paginatedItems = cartItems.slice(start, end);

                paginatedItems.forEach(item => {
                    let totalPrice = item.qty * item.price;
                    totalCartPrice += totalPrice;

                    // Tạo phần tử HTML cho mỗi sản phẩm
                    let cartItem = document.createElement('tr');
                    cartItem.id = 'cart-item-' + item.id;

                    cartItem.innerHTML = `
                                    <td><a href="${item.url}"><img src="${item.image}" alt="${item.name}" class="img-fluid" style="width: 80px;"></a></td>
                                    <td><a href="${item.url}">${item.name}</a></td>
                                    <td>${item.color}</td>
                                    <td>${item.size}</td>
                                    <td>${item.price.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' })}</td>
                                    <td>
                                        <div class="d-flex align-items-center justify-content-center">
                                            <button class="btn btn-outline-secondary btn-sm" onclick="updateQuantity(-1, ${item.id})">-</button>
                                            <input type="number" class="form-control mx-2" id="qty${item.id}" value="${item.qty}" min="1" style="width: 60px;" readonly>
                                            <button class="btn btn-outline-secondary btn-sm" onclick="updateQuantity(1, ${item.id})">+</button>
                                        </div>
                                    </td>
                                    <td id="total-price-${item.id}">${totalPrice.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' })}</td>
                                    <td>
                                        <button class="btn btn-danger btn-sm" onclick="removeItem(${item.id})">
                                            <i class="bi bi-x-circle"></i> Xoá
                                        </button>
                                    </td>
                                `;

                    cartContainer.appendChild(cartItem);
                });

                // Cập nhật tổng tiền tất cả các sản phẩm
                let totalCartPriceAll = cartItems.reduce((total, item) => total + (item.qty * item.price), 0);
                document.getElementById('total-cart-price').textContent = totalCartPriceAll.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' });

                // Hiển thị phân trang
                generatePagination();
            }
        }

        // Tạo phân trang
        function generatePagination() {
            let paginationContainer = document.getElementById('pagination');
            paginationContainer.innerHTML = ''; // Xóa các nút phân trang hiện tại

            let totalPages = Math.ceil(cartItems.length / itemsPerPage);

            // Thêm nút "Trang trước"
            if (currentPage > 1) {
                let prevButton = document.createElement('li');
                prevButton.classList.add('page-item');
                prevButton.innerHTML = `<a class="page-link" href="#" onclick="changePage(${currentPage - 1})">Trang trước</a>`;
                paginationContainer.appendChild(prevButton);
            }

            // Thêm các nút trang
            for (let i = 1; i <= totalPages; i++) {
                let pageButton = document.createElement('li');
                pageButton.classList.add('page-item');
                if (i === currentPage) {
                    pageButton.classList.add('active');
                }
                pageButton.innerHTML = `<a class="page-link" href="#" onclick="changePage(${i})">${i}</a>`;
                paginationContainer.appendChild(pageButton);
            }

            // Thêm nút "Trang sau"
            if (currentPage < totalPages) {
                let nextButton = document.createElement('li');
                nextButton.classList.add('page-item');
                nextButton.innerHTML = `<a class="page-link" href="#" onclick="changePage(${currentPage + 1})">Trang sau</a>`;
                paginationContainer.appendChild(nextButton);
            }
        }

        // Hàm thay đổi trang
        function changePage(page) {
            if (page < 1 || page > Math.ceil(cartItems.length / itemsPerPage)) return;
            currentPage = page;
            displayCart();
        }

        // Cập nhật số lượng sản phẩm
        function updateQuantity(change, itemId) {
            let item = cartItems.find(item => item.id === itemId);
            if (item) {
                item.qty = Math.max(1, item.qty + change);
                displayCart(); // Cập nhật lại giỏ hàng
            }
        }

        // Xóa sản phẩm khỏi giỏ hàng
        function removeItem(itemId) {
            cartItems = cartItems.filter(item => item.id !== itemId);
            displayCart(); // Cập nhật lại giỏ hàng
        }

        // Xóa hết giỏ hàng
        function clearCart() {
            cartItems = [];
            displayCart(); // Cập nhật lại giỏ hàng
        }

        // Khởi tạo trang giỏ hàng
        displayCart();
    </script>
}

